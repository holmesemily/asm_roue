


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         ;*******************************************************
                       *****************
   13 00000000         ;      IMPORT/EXPORT Système
   14 00000000         ;*******************************************************
                       *****************
   15 00000000         
   16 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         ; IMPORT/EXPORT de procédure           
   22 00000000         
   23 00000000                 IMPORT           Init_Cible
   24 00000000                 IMPORT           Allume_LED



ARM Macro Assembler    Page 3 


   25 00000000                 IMPORT           Eteint_LED
   26 00000000         
   27 00000000                 EXPORT           main
   28 00000000         
   29 00000000         ;*******************************************************
                       ************************
   30 00000000         
   31 00000000         
   32 00000000         ;*******************************************************
                       ************************
   33 00000000                 AREA             mesdonnees, data, readwrite
   34 00000000         
   35 00000000 40010808 
                       PORTAINPUT
                               EQU              0x40010808
   36 00000000 00 00   OLD_ETAT
                               DCW              0x0
   37 00000002 00000004 
                       NB      EQU              4
   38 00000002         
   39 00000002         
   40 00000002         ;*******************************************************
                       ************************
   41 00000002         
   42 00000002                 AREA             moncode, code, readonly
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         ;*******************************************************
                       ************************
   47 00000000         ; Procédure principale et point d'entrée du projet
   48 00000000         ;*******************************************************
                       ************************
   49 00000000         main    PROC
   50 00000000         
   51 00000000         ; Algorithme détection fronts montants 
   52 00000000         ; debut: 
   53 00000000         ;   Old_Etat = LireCapteur
   54 00000000         ;   while(1)
   55 00000000         ;    if (Capteur == 0) then
   56 00000000         ;     while (1)
   57 00000000         ;      if (Capteur == 1 && Old_Etat == 0) then
   58 00000000         ;       Allume_Led;
   59 00000000         ;       Old_Etat = 1;
   60 00000000         ;       B début;
   61 00000000         ;      else if (Capteur == 1 && Old_LED == 1) then
   62 00000000         ;       Eteint_Led;
   63 00000000         ;       Old_Etat = 0;
   64 00000000         ;       B début;
   65 00000000         ;      endif
   66 00000000         ;     end loop
   67 00000000         ;    endif
   68 00000000         ;   end loop
   69 00000000         ;   
   70 00000000         
   71 00000000         ;*******************************************************
                       ************************
   72 00000000         
   73 00000000 F04F 0000       MOV              R0,#0



ARM Macro Assembler    Page 4 


   74 00000004 F7FF FFFE       BL               Init_Cible  ;
   75 00000008         
   76 00000008 4916            LDR              R1, = PORTAINPUT
   77 0000000A 880A            LDRH             R2, [R1]
   78 0000000C F402 7280       AND              R2, #0x100
   79 00000010 4B15            LDR              R3, = OLD_ETAT
   80 00000012 801A            STRH             R2, [R3]    ; R2 = OldEtat <- C
                                                            apteur
   81 00000014         
   82 00000014 F04F 0404       LDR              R4, = NB
   83 00000018 7024            STRB             R4, [R4]
   84 0000001A         
   85 0000001A         
   86 0000001A 8808    Debut   LDRH             R0, [R1]
   87 0000001C F400 7080       AND              R0, #0x100  ; R0 = LireCapteur
   88 00000020 881A            LDRH             R2, [R3]
   89 00000022         
   90 00000022 2C00            CMP              R4, #0
   91 00000024 D01A            BEQ              Fin
   92 00000026 2800            CMP              R0, #0
   93 00000028 D1F7            BNE              Debut
   94 0000002A         
   95 0000002A         AttenteFront                         ; if Capteur == 0
   96 0000002A 480E            LDR              R0, = PORTAINPUT
   97 0000002C 8800            LDRH             R0, [R0]
   98 0000002E F400 7080       AND              R0, #0x100
   99 00000032         
  100 00000032 F5B0 7F80       CMP              R0, #0x100
  101 00000036 D1F8            BNE              AttenteFront
  102 00000038 2A00            CMP              R2, #0
  103 0000003A D107            BNE              OldEtatVrai
  104 0000003C         
  105 0000003C F7FF FFFE       BL               Allume_LED  ; if (Capteur == 1 
                                                            && Old_Etat == 0) t
                                                            hen
  106 00000040 F44F 7280       MOV              R2, #0x100
  107 00000044 801A            STRH             R2, [R3]
  108 00000046 F1A4 0401       SUB              R4, #1      ; décrémenter le co
                                                            mpteur
  109 0000004A E7E6            B                Debut
  110 0000004C         
  111 0000004C         OldEtatVrai                          ; if (Capteur == 1 
                                                            && Old_Etat == 1) t
                                                            hen
  112 0000004C F7FF FFFE       BL               Eteint_LED
  113 00000050 F04F 0200       MOV              R2, #0
  114 00000054 801A            STRH             R2, [R3]
  115 00000056 F1A4 0401       SUB              R4, #1      ; décrémenter le co
                                                            mpteur
  116 0000005A E7DE            B                Debut
  117 0000005C         
  118 0000005C         Fin
  119 0000005C F7FF FFFE       BL               Allume_LED
  120 00000060 E7FE            B                .
  121 00000062                 ENDP
  122 00000062         
  123 00000062                 END
              00 00 40010808 
              00000000 



ARM Macro Assembler    Page 5 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM
32F103RB -I.\RTE\_Simul_ -IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\
Core\Include -IC:\Programdata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\In
clude --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="
__UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_M
D SETA 1" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=.
\listings\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

OLD_ETAT 00000000

Symbol: OLD_ETAT
   Definitions
      At line 36 in file Principale.asm
   Uses
      At line 79 in file Principale.asm
Comment: OLD_ETAT used once
mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 33 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AttenteFront 0000002A

Symbol: AttenteFront
   Definitions
      At line 95 in file Principale.asm
   Uses
      At line 101 in file Principale.asm
Comment: AttenteFront used once
Debut 0000001A

Symbol: Debut
   Definitions
      At line 86 in file Principale.asm
   Uses
      At line 93 in file Principale.asm
      At line 109 in file Principale.asm
      At line 116 in file Principale.asm

Fin 0000005C

Symbol: Fin
   Definitions
      At line 118 in file Principale.asm
   Uses
      At line 91 in file Principale.asm
Comment: Fin used once
OldEtatVrai 0000004C

Symbol: OldEtatVrai
   Definitions
      At line 111 in file Principale.asm
   Uses
      At line 103 in file Principale.asm
Comment: OldEtatVrai used once
main 00000000

Symbol: main
   Definitions
      At line 49 in file Principale.asm
   Uses
      At line 27 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 42 in file Principale.asm
   Uses
      None
Comment: moncode unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEA unused
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
NB 00000004

Symbol: NB
   Definitions
      At line 37 in file Principale.asm
   Uses
      At line 82 in file Principale.asm
Comment: NB used once
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: OffsetSet unused
PORTAINPUT 40010808

Symbol: PORTAINPUT
   Definitions
      At line 35 in file Principale.asm
   Uses
      At line 76 in file Principale.asm
      At line 96 in file Principale.asm

SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Allume_LED 00000000

Symbol: Allume_LED
   Definitions
      At line 24 in file Principale.asm
   Uses
      At line 105 in file Principale.asm
      At line 119 in file Principale.asm

Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 25 in file Principale.asm
   Uses
      At line 112 in file Principale.asm
Comment: Eteint_LED used once
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 23 in file Principale.asm
   Uses
      At line 74 in file Principale.asm
Comment: Init_Cible used once
|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 16 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
4 symbols
370 symbols in table
